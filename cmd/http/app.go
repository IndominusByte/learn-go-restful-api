package main

import (
	"fmt"
	"log"

	_ "github.com/IndominusByte/learn-go-restful-api/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/IndominusByte/learn-go-restful-api/internal/config"
	endpoint_http "github.com/IndominusByte/learn-go-restful-api/internal/endpoint/http"
	categoriesrepo "github.com/IndominusByte/learn-go-restful-api/internal/repo/categories"
	categoriesusecase "github.com/IndominusByte/learn-go-restful-api/internal/usecase/categories"
	"github.com/go-chi/chi/v5"
	"github.com/go-chi/chi/v5/middleware"
	httpSwagger "github.com/swaggo/http-swagger"
)

func startApp(cfg *config.Config) (err error) {
	defer func() {
		if r := recover(); r != nil {
			err = fmt.Errorf("%v", r)
		}
	}()

	// connect the db
	db, err := config.DBConnect(cfg)
	if err != nil {
		return err
	}
	log.Printf("DB Connected")

	// connect redis
	redisCli, err := config.RedisConnect(cfg)
	if err != nil {
		return err
	}
	log.Println("Redis connected")

	r := chi.NewRouter()
	// middleware stack
	r.Use(middleware.RealIP)
	r.Use(middleware.Logger)
	r.Use(middleware.Recoverer)

	r.Get("/swagger/*", httpSwagger.Handler(
		httpSwagger.URL("doc.json"), //The url pointing to API definition
	))
	// you can insert your behaviors here
	categoriesRepo, err := categoriesrepo.New(db, redisCli)
	if err != nil {
		return err
	}
	categoriesUsecase := categoriesusecase.NewCategoriesUsecase(categoriesRepo)
	endpoint_http.AddCategories(r, categoriesUsecase)

	return startServer(r, cfg)
}
